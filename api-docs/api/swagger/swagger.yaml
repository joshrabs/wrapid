swagger: '2.0'
info:
  version: '1.0'
  title: Common API
  license:
    name: AllRightsReserved
  description: This is a Common API service desription
host: runabetterset.com
paths:
  '/user/{email}':
    get:
      produces:
        - application/json;charset=utf-8
      parameters:
        - required: true
          in: path
          name: email
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/User'
          description: ''
        '404':
          description: '`email` not found'
  '/user/profile/{email}':
    get:
      produces:
        - application/json;charset=utf-8
      parameters:
        - required: true
          in: path
          name: email
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/UserProfile'
          description: ''
        '404':
          description: '`email` not found'
  '/set/{uuid}/extra':
    post:
      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - required: true
          in: path
          name: uuid
          type: string
        - required: true
          schema:
            $ref: '#/definitions/Extra'
          in: body
          name: body
      responses:
        '200':
          schema:
            $ref: '#/definitions/Extra'
          description: ''
        '400':
          description: Invalid `body`
        '404':
          description: '`uuid` not found'
  '/set/{uuid}/extra/{uid}':
    get:
      produces:
        - application/json;charset=utf-8
      parameters:
        - required: true
          in: path
          name: uuid
          type: string
        - required: true
          in: path
          name: uid
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/Extra'
          description: ''
        '404':
          description: '`uuid` or `uid` not found'
  '/set/{uuid}/schedule/{date}':
    get:
      produces:
        - application/json;charset=utf-8
      parameters:
        - required: true
          in: path
          name: uuid
          type: string
        - required: true
          in: path
          name: date
          type: string
      responses:
        '200':
          schema:
            items:
              $ref: '#/definitions/Event'
            type: array
          description: ''
        '404':
          description: '`uuid` or `date` not found'
    post:
      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - required: true
          in: path
          name: uuid
          type: string
        - required: true
          in: path
          name: date
          type: string
        - required: true
          schema:
            $ref: '#/definitions/Schedule'
          in: body
          name: body
      responses:
        '200':
          schema:
            $ref: '#/definitions/Schedule'
          description: ''
        '400':
          description: Invalid `body`
        '404':
          description: '`uuid` or `date` not found'
  '/set/{uuid}/schedule/{date}/{uid}':
    get:
      produces:
        - application/json;charset=utf-8
      parameters:
        - required: true
          in: path
          name: uuid
          type: string
        - required: true
          in: path
          name: date
          type: string
        - required: true
          in: path
          name: uid
          type: string
      responses:
        '200':
          schema:
            items:
              $ref: '#/definitions/Event'
            type: array
          description: ''
        '404':
          description: '`uuid` or `date` or `uid` not found'
  '/set/{uuid}/schedule/{date}/event':
    post:
      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      parameters:
        - required: true
          in: path
          name: uuid
          type: string
        - required: true
          in: path
          name: date
          type: string
        - required: true
          schema:
            $ref: '#/definitions/Event'
          in: body
          name: body
      responses:
        '200':
          schema:
            $ref: '#/definitions/Event'
          description: ''
        '400':
          description: Invalid `body`
        '404':
          description: '`uuid` or `date` not found'
  '/set/{uuid}/schedule/event/{eid}':
    get:
      produces:
        - application/json;charset=utf-8
      parameters:
        - required: true
          in: path
          name: uuid
          type: string
        - required: true
          in: path
          name: eid
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/Event'
          description: ''
        '404':
          description: '`uuid` or `eid` not found'
  '/set/{uuid}/schedule/{eid}/delete':
    get:
      produces:
        - application/json;charset=utf-8
      parameters:
        - required: true
          in: path
          name: uuid
          type: string
        - required: true
          in: path
          name: eid
          type: string
      responses:
        '200':
          schema:
            type: boolean
          description: ''
        '404':
          description: '`uuid` or `eid` not found'
  '/set/{uuid}/skin/{date}':
    get:
      produces:
        - application/json;charset=utf-8
      parameters:
        - required: true
          in: path
          name: uuid
          type: string
        - required: true
          in: path
          name: date
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/Skin'
          description: ''
        '404':
          description: '`uuid` or `date` not found'
definitions:
  User:
    required:
      - uId
      - uCreated
      - uUpdated
    properties:
      uId:
        type: string
      uCreated:
        type: string
      uUpdated:
        type: string
    type: object
  UserProfile:
    required:
      - upUserId
      - upSubmitted
      - upAvatarLink
    properties:
      upUserId:
        type: string
      upSubmitted:
        type: string
      upAvatarLink:
        type: string
    type: object
  Extra:
    required:
      - id
      - etype
      - role
      - call
      - rate
      - name
      - contact
      - notes
    properties:
      id:
        maximum: 9223372036854776000
        minimum: -9223372036854776000
        type: integer
      etype:
        type: string
      role:
        type: string
      call:
        type: string
      rate:
        maximum: 9223372036854776000
        minimum: -9223372036854776000
        type: integer
      name:
        type: string
      contact:
        type: string
      notes:
        type: string
    type: object
  Schedule:
    required:
      - scUserId
      - scSetId
      - scEffective
      - scCreated
      - scUpdated
    properties:
      scUserId:
        type: string
      scSetId:
        type: string
      scEffective:
        $ref: '#/definitions/UTCTime'
      scCreated:
        $ref: '#/definitions/UTCTime'
      scUpdated:
        $ref: '#/definitions/UTCTime'
    type: object
  UTCTime:
    example: '2016-07-22T00:00:00Z'
    format: 'yyyy-mm-ddThh:MM:ssZ'
    type: string
  Event:
    required:
      - evUserId
      - evSetId
      - evEffective
      - evTitle
      - evStart
      - evFinish
      - evCreated
      - evUpdated
      - evDayTime
    properties:
      evUserId:
        type: string
      evSetId:
        type: string
      evEffective:
        $ref: '#/definitions/UTCTime'
      evTitle:
        type: string
      evDesc:
        type: string
      evDescScene:
        type: string
      evStart:
        $ref: '#/definitions/UTCTime'
      evFinish:
        $ref: '#/definitions/UTCTime'
      evCreated:
        $ref: '#/definitions/UTCTime'
      evUpdated:
        $ref: '#/definitions/UTCTime'
      evDayTime:
        type: string
    type: object
  Skin:
    required:
      - skSetId
      - skEddectiveDate
      - skCreatedDate
      - skUpdatedDate
    properties:
      skSetId:
        type: string
      skEddectiveDate:
        $ref: '#/definitions/UTCTime'
      skCreatedDate:
        $ref: '#/definitions/UTCTime'
      skUpdatedDate:
        $ref: '#/definitions/UTCTime'
    type: object
