server {
        server_name api.runabetterset.com;
	listen 443 ssl;

	ssl_certificate /etc/nginx/ssl/runabetterset.api/fullchain.pem;
	ssl_certificate_key /etc/nginx/ssl/runabetterset.api/key.pem;

	location = /favicon.ico {
		log_not_found off;
		access_log off;
	}

	location = /robots.txt {
		allow all;
		log_not_found off;
		access_log off;
	}
	
	# Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
	# Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
	location ~ /\. {
		deny all;
	}

	location /1 {
	
		location ^~ /1/upload {
			proxy_pass http://apiupload:4002;

			proxy_set_header X-Real-IP         $remote_addr;
			proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto https;
			proxy_set_header X-Forwarded-Port  443;
			proxy_set_header Host              $host;
			proxy_http_version 1.1;

			add_header 'Access-Control-Allow-Origin' '*' 'always';
			add_header 'Access-Control-Allow-Credentials' 'true' 'always';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, PUT, OPTIONS, HEAD' 'always';
			add_header 'Access-Control-Allow-Headers' 'Authorization, DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type' 'always';
		}

	       ## Actual location behaviour
		proxy_pass http://api:4001;

                proxy_set_header X-Real-IP  $remote_addr;
	  	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	  	proxy_set_header X-Forwarded-Proto https;
	  	proxy_set_header X-Forwarded-Port 443;
	  	proxy_set_header Host $host;
		proxy_http_version 1.1;

		if ($request_method = 'OPTIONS') {
		   add_header 'Access-Control-Allow-Origin' '*' 'always';
        	   add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
		   add_header 'Access-Control-Allow-Headers' 'Authorization, DNT,X-CustomHeader,Keep-Alive,User-Agent,Set-Cookie,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

		   add_header 'Access-Control-Max-Age' 1728000;
        	   add_header 'Content-Type' 'text/plain charset=UTF-8';
        	   add_header 'Content-Length' 0;
        	   return 204;
     		}


               if ($request_method = 'POST') {
                 add_header 'Access-Control-Allow-Origin' '*' 'always';
                 add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                 add_header 'Access-Control-Allow-Headers' 'Authorization, DNT,X-CustomHeader,Keep-Alive,User-Agent,Set-Cookie,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
               }
	       
               if ($request_method = 'GET') {
                 add_header 'Access-Control-Allow-Origin' '*' 'always';
                 add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                 add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,X-CustomHeader,Keep-Alive,User-Agent,Set-Cookie,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
               }

	}

	ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
	ssl_prefer_server_ciphers on;
	ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:RSA+AESGCM:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;

	ssl_dhparam /etc/nginx/ssl/dhparam2048.pem;
	ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
	ssl_session_cache shared:SSL:10m;
	ssl_session_tickets off; # Requires nginx >= 1.5.9
	ssl_stapling on; # Requires nginx >= 1.3.7
	ssl_stapling_verify on; # Requires nginx => 1.3.7
	resolver 8.8.8.8 valid=300s;
	resolver_timeout 5s;
	# Set HSTS to 365 days
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";
	add_header X-Frame-Options DENY;
	add_header X-Content-Type-Options nosniff;
}